CREATE TABLE  IF NOT EXISTS PUBLIC.MPA (
	ID INTEGER AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	CONSTRAINT MPA_PK PRIMARY KEY (ID)
);

CREATE TABLE  IF NOT EXISTS PUBLIC.GENRES (
	ID INTEGER AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);

CREATE TABLE  IF NOT EXISTS PUBLIC.FILMS (
	ID INTEGER AUTO_INCREMENT,
	NAME VARCHAR NOT NULL,
	DESCRIPTION VARCHAR,
	RELEASE_DATE DATE,
	DURATION INTEGER,
	MPA_ID INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(ID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	ID INTEGER AUTO_INCREMENT,
	ID_FILM INTEGER,
	ID_GENRE INTEGER,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_GENRE_FK FOREIGN KEY (ID_FILM) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILM_GENRE_FK_1 FOREIGN KEY (ID_GENRE) REFERENCES PUBLIC.GENRES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE  IF NOT EXISTS PUBLIC.USERS (
	ID INTEGER AUTO_INCREMENT,
	LOGIN VARCHAR NOT NULL,
	NAME VARCHAR,
	EMAIL VARCHAR NOT NULL,
	BIRTHDAY DATE,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	ID INTEGER AUTO_INCREMENT,
	ID_USER_1 INTEGER,
	ID_USER_2 INTEGER,
	STATUS BOOLEAN DEFAULT FALSE,
	CONSTRAINT FRIENDS_PK PRIMARY KEY (ID),
	CONSTRAINT FRIENDS_FK FOREIGN KEY (ID_USER_1) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDS_FK_1 FOREIGN KEY (ID_USER_2) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	ID_FILM INTEGER,
	ID_USER INTEGER,
    CONSTRAINT LIKES_PK PRIMARY KEY (ID_FILM,ID_USER),
	CONSTRAINT LIKES_FK FOREIGN KEY (ID_FILM) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT LIKES_FK_1 FOREIGN KEY (ID_USER) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);


